diff --git a/cacti.mk b/cacti.mk
index b675d75..4e4817a 100644
--- a/cacti.mk
+++ b/cacti.mk
@@ -13,7 +13,7 @@ INCS = -lm
 
 ifeq ($(TAG),dbg)
   DBG = -Wall 
-  OPT = -ggdb -g -O0 -DNTHREADS=1  -gstabs+
+  OPT = -ggdb -g -O0 -DNTHREADS=1
 else
   DBG = 
   OPT = -g  -msse2 -mfpmath=sse -DNTHREADS=$(NTHREADS)
diff --git a/io.cc b/io.cc
index 3a798aa..7ee34aa 100644
--- a/io.cc
+++ b/io.cc
@@ -1993,11 +1993,11 @@ bool InputParameter::error_checking()
     cerr << "Feature size must be > 0" << endl;
     return false;
   }
-  else if (F_sz_um > 0.091)
-  {
-    cerr << "Feature size must be <= 90 nm" << endl;
-    return false;
-  }
+//  else if (F_sz_um > 0.091)
+//  {
+//    cerr << "Feature size must be <= 90 nm" << endl;
+//    return false;
+//  }
 
 
   uint32_t RWP  = num_rw_ports;
@@ -2547,7 +2547,7 @@ void output_data_csv(const uca_org_t & fin_res, string fn)
     {
       file << "Tech node (nm), ";
       file << "Capacity (bytes), ";
-      file << "Number of banks, ";
+      //file << "Number of banks, ";
       file << "Associativity, ";
       file << "Output width (bits), ";
       file << "Access time (ns), ";
@@ -2572,25 +2572,25 @@ void output_data_csv(const uca_org_t & fin_res, string fn)
 //      file << "Leakage per bank with leak power management (mW), ";
 //      file << "Refresh power as percentage of standby leakage, ";
       file << "Area (mm2), ";
-      file << "Ndwl, ";
-      file << "Ndbl, ";
-      file << "Nspd, ";
-      file << "Ndcm, ";
-      file << "Ndsam_level_1, ";
-      file << "Ndsam_level_2, ";
-      file << "Data arrary area efficiency %, ";
-      file << "Ntwl, ";
-      file << "Ntbl, ";
-      file << "Ntspd, ";
-      file << "Ntcm, ";
-      file << "Ntsam_level_1, ";
-      file << "Ntsam_level_2, ";
-      file << "Tag arrary area efficiency %, ";
+      //file << "Ndwl, ";
+      //file << "Ndbl, ";
+      //file << "Nspd, ";
+      //file << "Ndcm, ";
+      //file << "Ndsam_level_1, ";
+      //file << "Ndsam_level_2, ";
+      //file << "Data arrary area efficiency %, ";
+      //file << "Ntwl, ";
+      //file << "Ntbl, ";
+      //file << "Ntspd, ";
+      //file << "Ntcm, ";
+      //file << "Ntsam_level_1, ";
+      //file << "Ntsam_level_2, ";
+      //file << "Tag arrary area efficiency %, ";
 
 //      file << "Resistance per unit micron (ohm-micron), ";
 //      file << "Capacitance per unit micron (fF per micron), ";
 //      file << "Unit-length wire delay (ps), ";
-//      file << "FO4 delay (ps), ";
+      file << "FO4 delay (ps), ";
 //      file << "delay route to bank (including crossb delay) (ps), ";
 //      file << "Crossbar delay (ps), ";
 //      file << "Dyn read energy per access from closed page (nJ), ";
@@ -2614,11 +2614,13 @@ void output_data_csv(const uca_org_t & fin_res, string fn)
 //      file << "Delay opt (perc), ";
 //      file << "Repeater opt (perc), ";
 //      file << "Aspect ratio";
+      file << "Width (um), ";
+      file << "Height (um), ";
       file << endl;
     }
     file << g_ip->F_sz_nm << ", ";
     file << g_ip->cache_sz << ", ";
-    file << g_ip->nbanks << ", ";
+    //file << g_ip->nbanks << ", ";
     file << g_ip->tag_assoc << ", ";
     file << g_ip->out_w << ", ";
     file << fin_res.access_time*1e+9 << ", ";
@@ -2672,38 +2674,38 @@ void output_data_csv(const uca_org_t & fin_res, string fn)
 //    file << fin_res.data_array.refresh_power / fin_res.data_array.total_power.readOp.leakage << ", ";
     file << fin_res.area*1e-6 << ", ";
 
-    file << fin_res.data_array2->Ndwl << ", ";
-    file << fin_res.data_array2->Ndbl << ", ";
-    file << fin_res.data_array2->Nspd << ", ";
-    file << fin_res.data_array2->deg_bl_muxing << ", ";
-    file << fin_res.data_array2->Ndsam_lev_1 << ", ";
-    file << fin_res.data_array2->Ndsam_lev_2 << ", ";
-    file << fin_res.data_array2->area_efficiency << ", ";
-    if (!(g_ip->fully_assoc || g_ip->pure_cam || g_ip->pure_ram))
-    {
-    file << fin_res.tag_array2->Ndwl << ", ";
-    file << fin_res.tag_array2->Ndbl << ", ";
-    file << fin_res.tag_array2->Nspd << ", ";
-    file << fin_res.tag_array2->deg_bl_muxing << ", ";
-    file << fin_res.tag_array2->Ndsam_lev_1 << ", ";
-    file << fin_res.tag_array2->Ndsam_lev_2 << ", ";
-    file << fin_res.tag_array2->area_efficiency << ", ";
-    }
-    else
-    {
-    	file << "N/A" << ", ";
-    	file << "N/A"<< ", ";
-    	file << "N/A" << ", ";
-    	file << "N/A" << ", ";
-    	file << "N/A" << ", ";
-    	file << "N/A" << ", ";
-    	file << "N/A" << ", ";
-    }
+    //file << fin_res.data_array2->Ndwl << ", ";
+    //file << fin_res.data_array2->Ndbl << ", ";
+    //file << fin_res.data_array2->Nspd << ", ";
+    //file << fin_res.data_array2->deg_bl_muxing << ", ";
+    //file << fin_res.data_array2->Ndsam_lev_1 << ", ";
+    //file << fin_res.data_array2->Ndsam_lev_2 << ", ";
+    //file << fin_res.data_array2->area_efficiency << ", ";
+    //if (!(g_ip->fully_assoc || g_ip->pure_cam || g_ip->pure_ram))
+    //{
+    //file << fin_res.tag_array2->Ndwl << ", ";
+    //file << fin_res.tag_array2->Ndbl << ", ";
+    //file << fin_res.tag_array2->Nspd << ", ";
+    //file << fin_res.tag_array2->deg_bl_muxing << ", ";
+    //file << fin_res.tag_array2->Ndsam_lev_1 << ", ";
+    //file << fin_res.tag_array2->Ndsam_lev_2 << ", ";
+    //file << fin_res.tag_array2->area_efficiency << ", ";
+    //}
+    //else
+    //{
+    //	file << "N/A" << ", ";
+    //	file << "N/A"<< ", ";
+    //	file << "N/A" << ", ";
+    //	file << "N/A" << ", ";
+    //	file << "N/A" << ", ";
+    //	file << "N/A" << ", ";
+    //	file << "N/A" << ", ";
+    //}
 
 //    file << g_tp.wire_inside_mat.R_per_um << ", ";
 //    file << g_tp.wire_inside_mat.C_per_um / 1e-15 << ", ";
 //    file << g_tp.unit_len_wire_del / 1e-12 << ", ";
-//    file << g_tp.FO4 / 1e-12 << ", ";
+    file << g_tp.FO4 / 1e-12 << ", ";
 //    file << fin_res.data_array.delay_route_to_bank / 1e-9 << ", ";
 //    file << fin_res.data_array.delay_crossbar / 1e-9 << ", ";
 //    file << fin_res.data_array.dyn_read_energy_from_closed_page / 1e-9 << ", ";
@@ -2721,6 +2723,8 @@ void output_data_csv(const uca_org_t & fin_res, string fn)
 //    file << fin_res.data_array.cas_latency * 1e9 << ", " ;
 //    file << fin_res.data_array.precharge_delay * 1e9 << ", " ;
 //    file << fin_res.data_array.all_banks_height / fin_res.data_array.all_banks_width;
+    file << fin_res.cache_ht << ", ";
+    file << fin_res.cache_len << ", ";
     file<<endl;
   }
   file.close();
diff --git a/nuca.cc b/nuca.cc
index 02e44a1..05f4e3b 100644
--- a/nuca.cc
+++ b/nuca.cc
@@ -40,11 +40,9 @@ unsigned int MIN_BANKSIZE=65536;
 #define LATCH_DELAY 28e-12 /* latch delay in s (later should use FO4 TODO) */
 #define CONTR_2_BANK_LAT 0
 
-int cont_stats[2 /*l2 or l3*/][5/* cores */][ROUTER_TYPES][7 /*banks*/][8 /* cycle time */];
+int cont_stats[2 /*l2 or l3*/][5/* cores */][ROUTER_TYPES][8 /*banks*/][8 /* cycle time */];
 
-  Nuca::Nuca(
-      /*TechnologyParameter::*/DeviceType *dt = &(g_tp.peri_global)
-      ):deviceType(dt)
+Nuca::Nuca(DeviceType *dt) : deviceType(dt)
 {
   init_cont();
 }
